{"version":3,"sources":["reducers/currencyReducer.js","actions/fetchCurrencyList.js","actions/getCurrencies.js","components/ErrorHandler.jsx","components/Exchanger.jsx","actions/clearCommaInput.js","actions/calculateCurrency.js","components/CurrencyValue.jsx","components/pages/Home.jsx","components/CurrencyListItem.jsx","components/CurrencyList.jsx","components/CurrencySelector.jsx","components/pages/Info.jsx","App.js","index.js"],"names":["SET_CURRENCY","SET_IS_FETCHING","SET_FETCH_ERROR","SET_CURRENCY_SUM","SET_QUERY_OPTIONS","defaultState","baseCurrency","queryOptions","currencyList","isFetching","currencySum","fetchError","isError","errorMsg","setCurrency","data","type","payload","base_code","conversion_rates","setIsFetching","bool","setFetchError","msg","status","setQueryOptions","firstCurrency","secondCurrency","numberValue","fetchCurrencyList","currencyName","dispatch","a","fetch","process","response","json","result","Error","ErrorHandler","errorType","useEffect","setTimeout","className","Exchanger","inputValue","setInputValue","handleButton","value","placeholder","onChange","e","target","replace","clearCommaInput","onClick","to","calculateCurrency","Object","keys","length","toFixed","CurrencyValue","includes","Home","useDispatch","useSelector","state","useState","tempCurrency","Number","isInteger","parseInt","char","push","join","toUpperCase","getCurrencies","style","marginTop","color","height","width","timeout","undefined","CurrencyListItem","name","currency","size","CurrencyList","entries","filter","map","index","key","CurrencySelector","handleChange","Info","App","path","component","exact","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66e02280.chunk.js","sourcesContent":["const SET_CURRENCY = \"SET_CURRENCY\";\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\r\nconst SET_FETCH_ERROR = \"SET_FETCH_ERROR\";\r\nconst SET_CURRENCY_SUM = \"SET_CURRENCY_SUM\";\r\nconst SET_QUERY_OPTIONS = \"SET_QUERY_OPTIONS\";\r\n\r\nconst defaultState = {\r\n  baseCurrency: \"\",\r\n  queryOptions: {},\r\n  currencyList: {},\r\n  isFetching: false,\r\n  currencySum: \"\",\r\n  fetchError: {\r\n    isError: false,\r\n    errorMsg: \"\",\r\n  },\r\n};\r\n\r\nexport const currencyReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENCY:\r\n      return {\r\n        ...state,\r\n        baseCurrency: action.payload.baseCurrency,\r\n        currencyList: action.payload.currencyList,\r\n        isFetching: false,\r\n      };\r\n    case SET_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.payload,\r\n      };\r\n    case SET_FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        queryOptions: {},\r\n        isFetching: action.payload.status,\r\n        fetchError: {\r\n          isError: action.payload.status,\r\n          errorMsg: action.payload.msg,\r\n        },\r\n      };\r\n    case SET_CURRENCY_SUM:\r\n      return {\r\n        ...state,\r\n        currencySum: action.payload,\r\n      };\r\n    case SET_QUERY_OPTIONS:\r\n      return {\r\n        ...state,\r\n        queryOptions: {\r\n          firstCurrency: action.payload.firstCurrency,\r\n          secondCurrency: action.payload.secondCurrency,\r\n          numberValue: action.payload.numberValue,\r\n        },\r\n      };\r\n    // case SET_IS_NOT_SUBMIT:\r\n    //   return {\r\n    //     ...state,\r\n    //     notIsSubmitted: action.payload,\r\n    //   };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport const setCurrency = (data) => {\r\n  return {\r\n    type: SET_CURRENCY,\r\n    payload: {\r\n      baseCurrency: data.base_code,\r\n      currencyList: data.conversion_rates,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setIsFetching = (bool) => ({\r\n  type: SET_IS_FETCHING,\r\n  payload: bool,\r\n});\r\n\r\nexport const setFetchError = (bool, msg = \"\") => ({\r\n  type: SET_FETCH_ERROR,\r\n  payload: {\r\n    status: bool,\r\n    msg,\r\n  },\r\n});\r\n\r\nexport const setCurrencySum = (sum) => ({\r\n  type: SET_CURRENCY_SUM,\r\n  payload: sum,\r\n});\r\n\r\nexport const setQueryOptions = ({\r\n  firstCurrency,\r\n  secondCurrency,\r\n  numberValue,\r\n}) => ({\r\n  type: SET_QUERY_OPTIONS,\r\n  payload: { firstCurrency, secondCurrency, numberValue },\r\n});\r\n","import {\r\n  setCurrency,\r\n  setIsFetching,\r\n  setFetchError,\r\n} from \"../reducers/currencyReducer\";\r\n\r\nexport function fetchCurrencyList(currencyName = \"UAH\") {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsFetching(true));\r\n      const response = await fetch(\r\n        `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_API_KEY}/latest/${currencyName}`\r\n      );\r\n      const data = await response.json();\r\n      if (data.result === \"success\") {\r\n        dispatch(setCurrency(data));\r\n      } else {\r\n        throw Error(data[\"error-type\"]);\r\n      }\r\n    } catch (e) {\r\n      dispatch(setFetchError(true, `Unsupported code [${currencyName}]`));\r\n    }\r\n  };\r\n}\r\n","import { setQueryOptions, setFetchError } from \"../reducers/currencyReducer\";\r\nimport { fetchCurrencyList } from \"../actions/fetchCurrencyList\";\r\n\r\nexport const getCurrencies = (inputValue, dispatch, currencyList) => {\r\n  let numberValue = [];\r\n  let firstCurrency = [];\r\n  let secondCurrency = [];\r\n  let tempCurrency = [];\r\n  if (!Number.isInteger(parseInt(inputValue[0]))) {\r\n    dispatch(setFetchError(true, \"Incorrect query\"));\r\n    return;\r\n  }\r\n  for (let char in inputValue) {\r\n    if (Number.isInteger(+inputValue[char]) || inputValue[char] === \".\") {\r\n      numberValue.push(inputValue[char]);\r\n    }\r\n    if (\r\n      inputValue[char] !== \" \" &&\r\n      !Number.isInteger(+inputValue[char]) &&\r\n      inputValue[char] !== \".\"\r\n    ) {\r\n      if (firstCurrency.length === 0 || secondCurrency.length === 0) {\r\n        if (tempCurrency.length < 3) {\r\n          if (inputValue[+char + 1] === \" \" && tempCurrency.length < 2) {\r\n            tempCurrency = [];\r\n          } else {\r\n            tempCurrency.push(inputValue[char]);\r\n            if (tempCurrency.length === 3) {\r\n              if (firstCurrency.length === 0) {\r\n                firstCurrency = [...tempCurrency];\r\n                tempCurrency = [];\r\n              } else {\r\n                secondCurrency = [...tempCurrency];\r\n                tempCurrency = [];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  firstCurrency = firstCurrency.join(\"\").toUpperCase();\r\n  secondCurrency = secondCurrency.join(\"\").toUpperCase();\r\n  numberValue = Number(numberValue.join(\"\")).toFixed(2);\r\n  dispatch(setQueryOptions({ firstCurrency, secondCurrency, numberValue }));\r\n  dispatch(fetchCurrencyList(firstCurrency));\r\n};\r\n","import { setFetchError } from \"../reducers/currencyReducer\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction ErrorHandler({ errorType, dispatch }) {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(setFetchError(false));\r\n    }, 3000);\r\n  }, []);\r\n  return <div className=\"error-info\">{errorType}</div>;\r\n}\r\n\r\nexport default ErrorHandler;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FaThList } from \"react-icons/fa\";\r\nimport { clearCommaInput } from \"../actions/clearCommaInput\";\r\n\r\nfunction Exchanger({ inputValue, setInputValue, handleButton }) {\r\n  return (\r\n    <div className=\"home-exchanger exchanger\">\r\n      <h1 className=\"exchanger__title\">Currency Exchanger</h1>\r\n      <input\r\n        data-testid=\"input\"\r\n        type=\"text\"\r\n        className=\"exchanger__input\"\r\n        value={inputValue}\r\n        placeholder=\"15 RUB in USD\"\r\n        onChange={(e) => {\r\n          setInputValue(e.target.value);\r\n          clearCommaInput(inputValue, setInputValue);\r\n        }}\r\n      ></input>\r\n      <button\r\n        className=\"exchanger__btn\"\r\n        data-testid=\"btn\"\r\n        onClick={handleButton}\r\n      >\r\n        Calculate\r\n      </button>\r\n      <Link to=\"/currency\" className=\"exchanger__link link\">\r\n        Currency List\r\n        <FaThList className=\"link-item\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exchanger;\r\n","export const clearCommaInput = (inputValue, setInputValue) => {\r\n  for (let char of inputValue) {\r\n    if (char === \",\") {\r\n      setInputValue(inputValue.replace(/,/gi, \".\"));\r\n    }\r\n  }\r\n};\r\n","export const calculateCurrency = (currencyList, queryOptions) => {\r\n  return (\r\n    Object.keys(queryOptions).length !== 0 &&\r\n    `${queryOptions.numberValue} ${queryOptions.firstCurrency} = ${(\r\n      currencyList[queryOptions.secondCurrency] * queryOptions.numberValue\r\n    ).toFixed(2)} ${queryOptions.secondCurrency}`\r\n  );\r\n};\r\n","import { calculateCurrency } from \"../actions/calculateCurrency\";\r\nimport { setFetchError } from \"../reducers/currencyReducer.js\";\r\n\r\nfunction CurrencyValue({ currencyList, queryOptions, dispatch }) {\r\n  if (!Object.keys(currencyList).includes(queryOptions.secondCurrency)) {\r\n    dispatch(\r\n      setFetchError(true, `Unsupported code [${queryOptions.secondCurrency}]`)\r\n    );\r\n    return \"\";\r\n  }\r\n  return (\r\n    <div className=\"home__currency-info info\">\r\n      <h1 className=\"info__description\">\r\n        {calculateCurrency(currencyList, queryOptions)}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyValue;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCurrencies } from \"../../actions/getCurrencies\";\r\nimport { fetchCurrencyList } from \"../../actions/fetchCurrencyList\";\r\nimport { setFetchError } from \"../../reducers/currencyReducer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ErrorHandler from \"../ErrorHandler\";\r\nimport Exchanger from \"../Exchanger\";\r\nimport \"./Home.css\";\r\nimport CurrencyValue from \"../CurrencyValue\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const isFetching = useSelector((state) => state.isFetching);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const currencyList = useSelector((state) => state.currencyList);\r\n  const fetchError = useSelector((state) => state.fetchError);\r\n  const queryOptions = useSelector((state) => state.queryOptions);\r\n\r\n  const handleButton = () => {\r\n    if (inputValue.length < 1) {\r\n      dispatch(setFetchError(true, \"Empty query\"));\r\n      return;\r\n    }\r\n    if (inputValue.length < 12) {\r\n      dispatch(setFetchError(true, \"Short query\"));\r\n      setInputValue(\"\");\r\n      return;\r\n    }\r\n    getCurrencies(inputValue.replace(/,/gi, \".\"), dispatch, currencyList);\r\n    setInputValue(\"\");\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home-wrapper\">\r\n        <Exchanger\r\n          data-testid=\"exchanger\"\r\n          inputValue={inputValue}\r\n          setInputValue={setInputValue}\r\n          handleButton={handleButton}\r\n        />\r\n      </div>\r\n      {fetchError.isError ? (\r\n        <ErrorHandler dispatch={dispatch} errorType={fetchError.errorMsg} />\r\n      ) : isFetching ? (\r\n        <div className=\"home-loader\" style={{ marginTop: \"10px\" }}>\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"blue\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        </div>\r\n      ) : queryOptions.firstCurrency === undefined ||\r\n        Object.keys(queryOptions).length === 0 ? (\r\n        \"\"\r\n      ) : (\r\n        <CurrencyValue\r\n          currencyList={currencyList}\r\n          queryOptions={queryOptions}\r\n          dispatch={dispatch}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import CurrencyFlag from \"react-currency-flags\";\r\n\r\nfunction CurrencyListItem({ name, baseCurrency, value }) {\r\n  return (\r\n    <>\r\n      <div className=\"list__item item\">\r\n        <div className=\"item__flag-origin\">\r\n          <CurrencyFlag currency={name} size=\"xl\" />\r\n        </div>\r\n        <div className=\"item__description\">\r\n          {`1 ${baseCurrency} = ${value.toFixed(2)} ${name}`}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrencyListItem;\r\n","import CurrencyListItem from \"./CurrencyListItem\";\r\n\r\nfunction CurrencyList({ currencyList, baseCurrency }) {\r\n  return (\r\n    <div className=\"info-list list\">\r\n      {Object.entries(currencyList)\r\n        .filter(([key]) => key !== baseCurrency)\r\n        .map(([key, value], index) => {\r\n          return (\r\n            <CurrencyListItem\r\n              key={index}\r\n              name={key}\r\n              value={value}\r\n              baseCurrency={baseCurrency}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyList;\r\n","import CurrencyFlag from \"react-currency-flags\";\r\nimport { FcSearch } from \"react-icons/fc\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CurrencySelector({ baseCurrency, currencyList, handleChange }) {\r\n  return (\r\n    <div className=\"info-selected__currency currency_selector selector\">\r\n      <div className=\"selector__title\">Selected Currency:</div>\r\n      <div className=\"selector__flag\">\r\n        <CurrencyFlag currency={baseCurrency} size=\"xl\" />\r\n      </div>\r\n      <div className=\"selector__body\">\r\n        <select value={baseCurrency} onChange={handleChange}>\r\n          {Object.keys(currencyList).map((key, index) => (\r\n            <option key={index} value={key}>\r\n              {key}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <FcSearch className=\"selector__search\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencySelector;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCurrencyList } from \"../../actions/fetchCurrencyList\";\r\nimport CurrencyList from \"../CurrencyList\";\r\nimport CurrencySelector from \"../CurrencySelector\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { setQueryOptions } from \"../../reducers/currencyReducer\";\r\n\r\nimport \"./Info.css\";\r\n\r\nfunction Info() {\r\n  const dispatch = useDispatch();\r\n  const { baseCurrency, currencyList, isFetching } = useSelector(\r\n    (state) => state\r\n  );\r\n  const handleChange = (e) => {\r\n    dispatch(fetchCurrencyList(e.target.value));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(setQueryOptions({}));\r\n    dispatch(fetchCurrencyList());\r\n  }, []);\r\n  return (\r\n    <div className=\"currency-info currency\">\r\n      <div className=\"currency-wrapper\">\r\n        {isFetching ? (\r\n          <div className=\"currency-loader\">\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"blue\"\r\n              height={100}\r\n              width={100}\r\n              timeout={3000}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <CurrencySelector\r\n              baseCurrency={baseCurrency}\r\n              currencyList={currencyList}\r\n              handleChange={handleChange}\r\n            />\r\n            <CurrencyList\r\n              baseCurrency={baseCurrency}\r\n              currencyList={currencyList}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Info from \"./components/pages/Info\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-wrapper\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Home} exact />\r\n            <Route path=\"/currency\" component={Info} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { currencyReducer } from \"./reducers/currencyReducer\";\r\n\r\nconst store = createStore(currencyReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}